  /**
   * Returns a new observable that triggers on the second and subsequent triggerings of the input observable.
   * The Nth triggering of the input observable passes the arguments from the N-1th and Nth triggering as a pair.
   * The argument passed to the N-1th triggering is held in hidden internal state until the Nth triggering occurs.
   * @returns ***REMOVED***Observable***REMOVED*** An observable that triggers on successive pairs of observations from the input observable as an array.
   */
  observableProto.pairwise = function () ***REMOVED***
    var source = this;
    return new AnonymousObservable(function (observer) ***REMOVED***
      var previous, hasPrevious = false;
      return source.subscribe(
        function (x) ***REMOVED***
          if (hasPrevious) ***REMOVED***
            observer.onNext([previous, x]);
          ***REMOVED*** else ***REMOVED***
            hasPrevious = true;
          ***REMOVED***
          previous = x;
        ***REMOVED***,
        observer.onError.bind(observer),
        observer.onCompleted.bind(observer));
    ***REMOVED***, source);
  ***REMOVED***;
