  /**
   *  Records the time interval between consecutive values in an observable sequence.
   *
   * @example
   *  1 - res = source.timeInterval();
   *  2 - res = source.timeInterval(Rx.Scheduler.timeout);
   *
   * @param [scheduler]  Scheduler used to compute time intervals. If not specified, the timeout scheduler is used.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence with time interval information on values.
   */
  observableProto.timeInterval = function (scheduler) ***REMOVED***
    var source = this;
    isScheduler(scheduler) || (scheduler = timeoutScheduler);
    return observableDefer(function () ***REMOVED***
      var last = scheduler.now();
      return source.map(function (x) ***REMOVED***
        var now = scheduler.now(), span = now - last;
        last = now;
        return ***REMOVED*** value: x, interval: span ***REMOVED***;
      ***REMOVED***);
    ***REMOVED***);
  ***REMOVED***;
