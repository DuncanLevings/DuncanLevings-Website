  /**
   * Determines whether an observable sequence contains a specified element with an optional equality comparer.
   * @param searchElement The value to locate in the source sequence.
   * @param ***REMOVED***Number***REMOVED*** [fromIndex] An equality comparer to compare elements.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence containing a single element determining whether the source sequence contains an element that has the specified value from the given index.
   */
  observableProto.contains = function (searchElement, fromIndex) ***REMOVED***
    var source = this;
    function comparer(a, b) ***REMOVED***
      return (a === 0 && b === 0) || (a === b || (isNaN(a) && isNaN(b)));
    ***REMOVED***
    return new AnonymousObservable(function (o) ***REMOVED***
      var i = 0, n = +fromIndex || 0;
      Math.abs(n) === Infinity && (n = 0);
      if (n < 0) ***REMOVED***
        o.onNext(false);
        o.onCompleted();
        return disposableEmpty;
      ***REMOVED***
      return source.subscribe(
        function (x) ***REMOVED***
          if (i++ >= n && comparer(x, searchElement)) ***REMOVED***
            o.onNext(true);
            o.onCompleted();
          ***REMOVED***
        ***REMOVED***,
        function (e) ***REMOVED*** o.onError(e); ***REMOVED***,
        function () ***REMOVED***
          o.onNext(false);
          o.onCompleted();
        ***REMOVED***);
    ***REMOVED***, this);
  ***REMOVED***;
