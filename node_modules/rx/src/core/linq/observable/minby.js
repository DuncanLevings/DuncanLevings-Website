  /**
   * Returns the elements in an observable sequence with the minimum key value according to the specified comparer.
   * @example
   * var res = source.minBy(function (x) ***REMOVED*** return x.value; ***REMOVED***);
   * var res = source.minBy(function (x) ***REMOVED*** return x.value; ***REMOVED***, function (x, y) ***REMOVED*** return x - y; ***REMOVED***);
   * @param ***REMOVED***Function***REMOVED*** keySelector Key selector function.
   * @param ***REMOVED***Function***REMOVED*** [comparer] Comparer used to compare key values.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence containing a list of zero or more elements that have a minimum key value.
   */
  observableProto.minBy = function (keySelector, comparer) ***REMOVED***
    comparer || (comparer = defaultSubComparer);
    return extremaBy(this, keySelector, function (x, y) ***REMOVED*** return comparer(x, y) * -1; ***REMOVED***);
  ***REMOVED***;
