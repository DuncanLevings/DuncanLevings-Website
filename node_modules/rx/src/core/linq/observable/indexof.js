  /**
   * Returns the first index at which a given element can be found in the observable sequence, or -1 if it is not present.
   * @param ***REMOVED***Any***REMOVED*** searchElement Element to locate in the array.
   * @param ***REMOVED***Number***REMOVED*** [fromIndex] The index to start the search.  If not specified, defaults to 0.
   * @returns ***REMOVED***Observable***REMOVED*** And observable sequence containing the first index at which a given element can be found in the observable sequence, or -1 if it is not present.
   */
  observableProto.indexOf = function(searchElement, fromIndex) ***REMOVED***
    var source = this;
    return new AnonymousObservable(function (o) ***REMOVED***
      var i = 0, n = +fromIndex || 0;
      Math.abs(n) === Infinity && (n = 0);
      if (n < 0) ***REMOVED***
        o.onNext(-1);
        o.onCompleted();
        return disposableEmpty;
      ***REMOVED***
      return source.subscribe(
        function (x) ***REMOVED***
          if (i >= n && x === searchElement) ***REMOVED***
            o.onNext(i);
            o.onCompleted();
          ***REMOVED***
          i++;
        ***REMOVED***,
        function (e) ***REMOVED*** o.onError(e); ***REMOVED***,
        function () ***REMOVED***
          o.onNext(-1);
          o.onCompleted();
        ***REMOVED***);
    ***REMOVED***, source);
  ***REMOVED***;
