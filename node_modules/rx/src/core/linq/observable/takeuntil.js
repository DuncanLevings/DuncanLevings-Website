  /**
   * Returns the values from the source observable sequence until the other observable sequence produces a value.
   * @param ***REMOVED***Observable | Promise***REMOVED*** other Observable sequence or Promise that terminates propagation of elements of the source sequence.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence containing the elements of the source sequence up to the point the other sequence interrupted further propagation.
   */
  observableProto.takeUntil = function (other) ***REMOVED***
    var source = this;
    return new AnonymousObservable(function (o) ***REMOVED***
      isPromise(other) && (other = observableFromPromise(other));
      return new CompositeDisposable(
        source.subscribe(o),
        other.subscribe(function () ***REMOVED*** o.onCompleted(); ***REMOVED***, function (e) ***REMOVED*** o.onError(e); ***REMOVED***, noop)
      );
    ***REMOVED***, source);
  ***REMOVED***;
