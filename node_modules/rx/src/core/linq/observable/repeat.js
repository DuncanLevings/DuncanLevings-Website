  /**
   *  Generates an observable sequence that repeats the given element the specified number of times, using the specified scheduler to send out observer messages.
   *
   * @example
   *  var res = Rx.Observable.repeat(42);
   *  var res = Rx.Observable.repeat(42, 4);
   *  3 - res = Rx.Observable.repeat(42, 4, Rx.Scheduler.timeout);
   *  4 - res = Rx.Observable.repeat(42, null, Rx.Scheduler.timeout);
   * @param ***REMOVED***Mixed***REMOVED*** value Element to repeat.
   * @param ***REMOVED***Number***REMOVED*** repeatCount [Optiona] Number of times to repeat the element. If not specified, repeats indefinitely.
   * @param ***REMOVED***Scheduler***REMOVED*** scheduler Scheduler to run the producer loop on. If not specified, defaults to Scheduler.immediate.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence that repeats the given element the specified number of times.
   */
  Observable.repeat = function (value, repeatCount, scheduler) ***REMOVED***
    isScheduler(scheduler) || (scheduler = currentThreadScheduler);
    return observableReturn(value, scheduler).repeat(repeatCount == null ? -1 : repeatCount);
  ***REMOVED***;
