  /**
   * Merges the specified observable sequences into one observable sequence by emitting a list with the elements of the observable sequences at corresponding indexes.
   * @param arguments Observable sources.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence containing lists of elements at corresponding indexes.
   */
  Observable.zipArray = function () ***REMOVED***
    var sources = argsOrArray(arguments, 0);
    return new AnonymousObservable(function (observer) ***REMOVED***
      var n = sources.length,
        queues = arrayInitialize(n, function () ***REMOVED*** return []; ***REMOVED***),
        isDone = arrayInitialize(n, function () ***REMOVED*** return false; ***REMOVED***);

      function next(i) ***REMOVED***
        if (queues.every(function (x) ***REMOVED*** return x.length > 0; ***REMOVED***)) ***REMOVED***
          var res = queues.map(function (x) ***REMOVED*** return x.shift(); ***REMOVED***);
          observer.onNext(res);
        ***REMOVED*** else if (isDone.filter(function (x, j) ***REMOVED*** return j !== i; ***REMOVED***).every(identity)) ***REMOVED***
          observer.onCompleted();
          return;
        ***REMOVED***
      ***REMOVED***;

      function done(i) ***REMOVED***
        isDone[i] = true;
        if (isDone.every(identity)) ***REMOVED***
          observer.onCompleted();
          return;
        ***REMOVED***
      ***REMOVED***

      var subscriptions = new Array(n);
      for (var idx = 0; idx < n; idx++) ***REMOVED***
        (function (i) ***REMOVED***
          subscriptions[i] = new SingleAssignmentDisposable();
          subscriptions[i].setDisposable(sources[i].subscribe(function (x) ***REMOVED***
            queues[i].push(x);
            next(i);
          ***REMOVED***, function (e) ***REMOVED*** observer.onError(e); ***REMOVED***, function () ***REMOVED***
            done(i);
          ***REMOVED***));
        ***REMOVED***)(idx);
      ***REMOVED***

      return new CompositeDisposable(subscriptions);
    ***REMOVED***);
  ***REMOVED***;
