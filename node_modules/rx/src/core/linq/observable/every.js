  /**
   * Determines whether all elements of an observable sequence satisfy a condition.
   * @param ***REMOVED***Function***REMOVED*** [predicate] A function to test each element for a condition.
   * @param ***REMOVED***Any***REMOVED*** [thisArg] Object to use as this when executing callback.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence containing a single element determining whether all elements in the source sequence pass the test in the specified predicate.
   */
  observableProto.every = function (predicate, thisArg) ***REMOVED***
    return this.filter(function (v) ***REMOVED*** return !predicate(v); ***REMOVED***, thisArg).some().map(not);
  ***REMOVED***;

  /** @deprecated use #every instead */
  observableProto.all = function () ***REMOVED***
    //deprecate('all', 'every');
    return this.every.apply(this, arguments);
  ***REMOVED***;
