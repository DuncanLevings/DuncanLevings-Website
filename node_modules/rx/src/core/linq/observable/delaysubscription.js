  /**
   *  Time shifts the observable sequence by delaying the subscription.
   *
   * @example
   *  1 - res = source.delaySubscription(5000); // 5s
   *  2 - res = source.delaySubscription(5000, Rx.Scheduler.timeout); // 5 seconds
   *
   * @param ***REMOVED***Number***REMOVED*** dueTime Absolute or relative time to perform the subscription at.
   * @param ***REMOVED***Scheduler***REMOVED*** [scheduler]  Scheduler to run the subscription delay timer on. If not specified, the timeout scheduler is used.
   * @returns ***REMOVED***Observable***REMOVED*** Time-shifted sequence.
   */
  observableProto.delaySubscription = function (dueTime, scheduler) ***REMOVED***
    return this.delayWithSelector(observableTimer(dueTime, isScheduler(scheduler) ? scheduler : timeoutScheduler), observableEmpty);
  ***REMOVED***;
