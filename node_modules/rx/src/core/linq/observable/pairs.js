  /**
   * Convert an object into an observable sequence of [key, value] pairs.
   * @param ***REMOVED***Object***REMOVED*** obj The object to inspect.
   * @param ***REMOVED***Scheduler***REMOVED*** [scheduler] Scheduler to run the enumeration of the input sequence on.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence of [key, value] pairs from the object.
   */
  Observable.pairs = function (obj, scheduler) ***REMOVED***
    scheduler || (scheduler = Rx.Scheduler.currentThread);
    return new AnonymousObservable(function (observer) ***REMOVED***
      var idx = 0, keys = Object.keys(obj), len = keys.length;
      return scheduler.scheduleRecursive(function (self) ***REMOVED***
        if (idx < len) ***REMOVED***
          var key = keys[idx++];
          observer.onNext([key, obj[key]]);
          self();
        ***REMOVED*** else ***REMOVED***
          observer.onCompleted();
        ***REMOVED***
      ***REMOVED***);
    ***REMOVED***);
  ***REMOVED***;
