  /**
   * Returns the first element of an observable sequence that satisfies the condition in the predicate if present else the first item in the sequence.
   * @example
   * var res = res = source.first();
   * var res = res = source.first(function (x) ***REMOVED*** return x > 3; ***REMOVED***);
   * @param ***REMOVED***Function***REMOVED*** [predicate] A predicate function to evaluate for elements in the source sequence.
   * @param ***REMOVED***Any***REMOVED*** [thisArg] Object to use as `this` when executing the predicate.
   * @returns ***REMOVED***Observable***REMOVED*** Sequence containing the first element in the observable sequence that satisfies the condition in the predicate if provided, else the first item in the sequence.
   */
  observableProto.first = function (predicate, thisArg) ***REMOVED***
    return predicate ?
      this.where(predicate, thisArg).first() :
      firstOrDefaultAsync(this, false);
  ***REMOVED***;
