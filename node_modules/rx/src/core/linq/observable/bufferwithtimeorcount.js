    /**
     *  Projects each element of an observable sequence into a buffer that is completed when either it's full or a given amount of time has elapsed.
     *
     * @example
     *  1 - res = source.bufferWithTimeOrCount(5000, 50); // 5s or 50 items in an array
     *  2 - res = source.bufferWithTimeOrCount(5000, 50, scheduler); // 5s or 50 items in an array
     *
     * @param ***REMOVED***Number***REMOVED*** timeSpan Maximum time length of a buffer.
     * @param ***REMOVED***Number***REMOVED*** count Maximum element count of a buffer.
     * @param ***REMOVED***Scheduler***REMOVED*** [scheduler]  Scheduler to run bufferin timers on. If not specified, the timeout scheduler is used.
     * @returns ***REMOVED***Observable***REMOVED*** An observable sequence of buffers.
     */
    observableProto.bufferWithTimeOrCount = function (timeSpan, count, scheduler) ***REMOVED***
        return this.windowWithTimeOrCount(timeSpan, count, scheduler).selectMany(function (x) ***REMOVED***
            return x.toArray();
        ***REMOVED***);
    ***REMOVED***;
