  /**
   *  Converts an array to an observable sequence, using an optional scheduler to enumerate the array.
   * @deprecated use Observable.from or Observable.of
   * @param ***REMOVED***Scheduler***REMOVED*** [scheduler] Scheduler to run the enumeration of the input sequence on.
   * @returns ***REMOVED***Observable***REMOVED*** The observable sequence whose elements are pulled from the given enumerable sequence.
   */
  var observableFromArray = Observable.fromArray = function (array, scheduler) ***REMOVED***
    //deprecate('fromArray', 'from');
    isScheduler(scheduler) || (scheduler = currentThreadScheduler);
    return new AnonymousObservable(function (observer) ***REMOVED***
      var count = 0, len = array.length;
      return scheduler.scheduleRecursive(function (self) ***REMOVED***
        if (count < len) ***REMOVED***
          observer.onNext(array[count++]);
          self();
        ***REMOVED*** else ***REMOVED***
          observer.onCompleted();
        ***REMOVED***
      ***REMOVED***);
    ***REMOVED***);
  ***REMOVED***;
