  /**
   * Converts the observable sequence to a Set if it exists.
   * @returns ***REMOVED***Observable***REMOVED*** An observable sequence with a single value of a Set containing the values from the observable sequence.
   */
  observableProto.toSet = function () ***REMOVED***
    if (typeof root.Set === 'undefined') ***REMOVED*** throw new TypeError(); ***REMOVED***
    var source = this;
    return new AnonymousObservable(function (o) ***REMOVED***
      var s = new root.Set();
      return source.subscribe(
        function (x) ***REMOVED*** s.add(x); ***REMOVED***,
        function (e) ***REMOVED*** o.onError(e); ***REMOVED***,
        function () ***REMOVED***
          o.onNext(s);
          o.onCompleted();
        ***REMOVED***);
    ***REMOVED***, source);
  ***REMOVED***;
