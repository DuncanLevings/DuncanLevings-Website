    var CheckedObserver = (function (_super) ***REMOVED***
        inherits(CheckedObserver, _super);

        function CheckedObserver(observer) ***REMOVED***
            _super.call(this);
            this._observer = observer;
            this._state = 0; // 0 - idle, 1 - busy, 2 - done
        ***REMOVED***

        var CheckedObserverPrototype = CheckedObserver.prototype;

        CheckedObserverPrototype.onNext = function (value) ***REMOVED***
            this.checkAccess();
            try ***REMOVED***
                this._observer.onNext(value);
            ***REMOVED*** catch (e) ***REMOVED***
                throw e;
            ***REMOVED*** finally ***REMOVED***
                this._state = 0;
            ***REMOVED***
        ***REMOVED***;

        CheckedObserverPrototype.onError = function (err) ***REMOVED***
            this.checkAccess();
            try ***REMOVED***
                this._observer.onError(err);
            ***REMOVED*** catch (e) ***REMOVED***
                throw e;
            ***REMOVED*** finally ***REMOVED***
                this._state = 2;
            ***REMOVED***
        ***REMOVED***;

        CheckedObserverPrototype.onCompleted = function () ***REMOVED***
            this.checkAccess();
            try ***REMOVED***
                this._observer.onCompleted();
            ***REMOVED*** catch (e) ***REMOVED***
                throw e;
            ***REMOVED*** finally ***REMOVED***
                this._state = 2;
            ***REMOVED***
        ***REMOVED***;

        CheckedObserverPrototype.checkAccess = function () ***REMOVED***
            if (this._state === 1) ***REMOVED*** throw new Error('Re-entrancy detected'); ***REMOVED***
            if (this._state === 2) ***REMOVED*** throw new Error('Observer completed'); ***REMOVED***
            if (this._state === 0) ***REMOVED*** this._state = 1; ***REMOVED***
        ***REMOVED***;

        return CheckedObserver;
    ***REMOVED***(Observer));
