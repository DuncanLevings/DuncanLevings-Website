  var SchedulePeriodicRecursive = Rx.internals.SchedulePeriodicRecursive = (function () ***REMOVED***
    function tick(command, recurse) ***REMOVED***
      recurse(0, this._period);
      try ***REMOVED***
        this._state = this._action(this._state);
      ***REMOVED*** catch (e) ***REMOVED***
        this._cancel.dispose();
        throw e;
      ***REMOVED***
    ***REMOVED***

    function SchedulePeriodicRecursive(scheduler, state, period, action) ***REMOVED***
      this._scheduler = scheduler;
      this._state = state;
      this._period = period;
      this._action = action;
    ***REMOVED***

    SchedulePeriodicRecursive.prototype.start = function () ***REMOVED***
      var d = new SingleAssignmentDisposable();
      this._cancel = d;
      d.setDisposable(this._scheduler.scheduleRecursiveWithRelativeAndState(0, this._period, tick.bind(this)));

      return d;
    ***REMOVED***;

    return SchedulePeriodicRecursive;
  ***REMOVED***());
