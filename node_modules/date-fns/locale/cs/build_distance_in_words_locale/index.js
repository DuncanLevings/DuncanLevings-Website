function declensionGroup (scheme, count) ***REMOVED***
  if (count === 1) ***REMOVED***
    return scheme.one
  ***REMOVED***

  if (count >= 2 && count <= 4) ***REMOVED***
    return scheme.twoFour
  ***REMOVED***

  // if count === null || count === 0 || count >= 5
  return scheme.other
***REMOVED***

function declension (scheme, count, time) ***REMOVED***
  var group = declensionGroup(scheme, count)
  var finalText = group[time] || group
  return finalText.replace('***REMOVED******REMOVED***count***REMOVED******REMOVED***', count)
***REMOVED***

function extractPreposition (token) ***REMOVED***
  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) ***REMOVED***
    return !!token.match(new RegExp('^' + preposition))
  ***REMOVED***)

  return result[0]
***REMOVED***

function prefixPreposition (preposition) ***REMOVED***
  var translation = ''

  if (preposition === 'almost') ***REMOVED***
    translation = 'skoro'
  ***REMOVED***

  if (preposition === 'about') ***REMOVED***
    translation = 'přibližně'
  ***REMOVED***

  return translation.length > 0 ? translation + ' ' : ''
***REMOVED***

function suffixPreposition (preposition) ***REMOVED***
  var translation = ''

  if (preposition === 'lessThan') ***REMOVED***
    translation = 'méně než'
  ***REMOVED***

  if (preposition === 'over') ***REMOVED***
    translation = 'více než'
  ***REMOVED***

  return translation.length > 0 ? translation + ' ' : ''
***REMOVED***

function lowercaseFirstLetter (string) ***REMOVED***
  return string.charAt(0).toLowerCase() + string.slice(1)
***REMOVED***

function buildDistanceInWordsLocale () ***REMOVED***
  var distanceInWordsLocale = ***REMOVED***
    xSeconds: ***REMOVED***
      one: ***REMOVED***
        regular: 'vteřina',
        past: 'vteřinou',
        future: 'vteřinu'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** vteřiny',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** vteřinami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** vteřiny'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** vteřin',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** vteřinami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** vteřin'
      ***REMOVED***
    ***REMOVED***,

    halfAMinute: ***REMOVED***
      other: ***REMOVED***
        regular: 'půl minuty',
        past: 'půl minutou',
        future: 'půl minuty'
      ***REMOVED***
    ***REMOVED***,

    xMinutes: ***REMOVED***
      one: ***REMOVED***
        regular: 'minuta',
        past: 'minutou',
        future: 'minutu'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minuty',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minutami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minuty'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minut',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minutami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minut'
      ***REMOVED***
    ***REMOVED***,

    xHours: ***REMOVED***
      one: ***REMOVED***
        regular: 'hodina',
        past: 'hodinou',
        future: 'hodinu'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodiny',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodinami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodiny'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodin',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodinami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodin'
      ***REMOVED***
    ***REMOVED***,

    xDays: ***REMOVED***
      one: ***REMOVED***
        regular: 'den',
        past: 'dnem',
        future: 'den'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dni',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dny',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dni'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dní',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dny',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dní'
      ***REMOVED***
    ***REMOVED***,

    xMonths: ***REMOVED***
      one: ***REMOVED***
        regular: 'měsíc',
        past: 'měsícem',
        future: 'měsíc'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** měsíce',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** měsíci',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** měsíce'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** měsíců',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** měsíci',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** měsíců'
      ***REMOVED***
    ***REMOVED***,

    xYears: ***REMOVED***
      one: ***REMOVED***
        regular: 'rok',
        past: 'rokem',
        future: 'rok'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roky',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roky',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roky'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roků',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roky',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roků'
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***

  function localize (token, count, options) ***REMOVED***
    options = options || ***REMOVED******REMOVED***

    var preposition = extractPreposition(token) || ''
    var key = lowercaseFirstLetter(token.substring(preposition.length))
    var scheme = distanceInWordsLocale[key]

    if (!options.addSuffix) ***REMOVED***
      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')
    ***REMOVED***

    if (options.comparison > 0) ***REMOVED***
      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')
    ***REMOVED*** else ***REMOVED***
      return prefixPreposition(preposition) + 'před ' + suffixPreposition(preposition) + declension(scheme, count, 'past')
    ***REMOVED***
  ***REMOVED***

  return ***REMOVED***
    localize: localize
  ***REMOVED***
***REMOVED***

module.exports = buildDistanceInWordsLocale
