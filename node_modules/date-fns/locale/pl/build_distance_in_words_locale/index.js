function declensionGroup (scheme, count) ***REMOVED***
  if (count === 1) ***REMOVED***
    return scheme.one
  ***REMOVED***

  var rem100 = count % 100

  // ends with 11-20
  if (rem100 <= 20 && rem100 > 10) ***REMOVED***
    return scheme.other
  ***REMOVED***

  var rem10 = rem100 % 10

  // ends with 2, 3, 4
  if (rem10 >= 2 && rem10 <= 4) ***REMOVED***
    return scheme.twoFour
  ***REMOVED***

  return scheme.other
***REMOVED***

function declension (scheme, count, time) ***REMOVED***
  time = time || 'regular'
  var group = declensionGroup(scheme, count)
  var finalText = group[time] || group
  return finalText.replace('***REMOVED******REMOVED***count***REMOVED******REMOVED***', count)
***REMOVED***

function buildDistanceInWordsLocale () ***REMOVED***
  var distanceInWordsLocale = ***REMOVED***
    lessThanXSeconds: ***REMOVED***
      one: ***REMOVED***
        regular: 'mniej niż sekunda',
        past: 'mniej niż sekundę',
        future: 'mniej niż sekundę'
      ***REMOVED***,
      twoFour: 'mniej niż ***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekundy',
      other: 'mniej niż ***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekund'
    ***REMOVED***,

    xSeconds: ***REMOVED***
      one: ***REMOVED***
        regular: 'sekunda',
        past: 'sekundę',
        future: 'sekundę'
      ***REMOVED***,
      twoFour: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekundy',
      other: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekund'
    ***REMOVED***,

    halfAMinute: ***REMOVED***
      one: 'pół minuty',
      twoFour: 'pół minuty',
      other: 'pół minuty'
    ***REMOVED***,

    lessThanXMinutes: ***REMOVED***
      one: ***REMOVED***
        regular: 'mniej niż minuta',
        past: 'mniej niż minutę',
        future: 'mniej niż minutę'
      ***REMOVED***,
      twoFour: 'mniej niż ***REMOVED******REMOVED***count***REMOVED******REMOVED*** minuty',
      other: 'mniej niż ***REMOVED******REMOVED***count***REMOVED******REMOVED*** minut'
    ***REMOVED***,

    xMinutes: ***REMOVED***
      one: ***REMOVED***
        regular: 'minuta',
        past: 'minutę',
        future: 'minutę'
      ***REMOVED***,
      twoFour: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minuty',
      other: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minut'
    ***REMOVED***,

    aboutXHours: ***REMOVED***
      one: ***REMOVED***
        regular: 'około godzina',
        past: 'około godziny',
        future: 'około godzinę'
      ***REMOVED***,
      twoFour: 'około ***REMOVED******REMOVED***count***REMOVED******REMOVED*** godziny',
      other: 'około ***REMOVED******REMOVED***count***REMOVED******REMOVED*** godzin'
    ***REMOVED***,

    xHours: ***REMOVED***
      one: ***REMOVED***
        regular: 'godzina',
        past: 'godzinę',
        future: 'godzinę'
      ***REMOVED***,
      twoFour: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** godziny',
      other: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** godzin'
    ***REMOVED***,

    xDays: ***REMOVED***
      one: ***REMOVED***
        regular: 'dzień',
        past: 'dzień',
        future: '1 dzień'
      ***REMOVED***,
      twoFour: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dni',
      other: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dni'
    ***REMOVED***,

    aboutXMonths: ***REMOVED***
      one: 'około miesiąc',
      twoFour: 'około ***REMOVED******REMOVED***count***REMOVED******REMOVED*** miesiące',
      other: 'około ***REMOVED******REMOVED***count***REMOVED******REMOVED*** miesięcy'
    ***REMOVED***,

    xMonths: ***REMOVED***
      one: 'miesiąc',
      twoFour: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** miesiące',
      other: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** miesięcy'
    ***REMOVED***,

    aboutXYears: ***REMOVED***
      one: 'około rok',
      twoFour: 'około ***REMOVED******REMOVED***count***REMOVED******REMOVED*** lata',
      other: 'około ***REMOVED******REMOVED***count***REMOVED******REMOVED*** lat'
    ***REMOVED***,

    xYears: ***REMOVED***
      one: 'rok',
      twoFour: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** lata',
      other: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** lat'
    ***REMOVED***,

    overXYears: ***REMOVED***
      one: 'ponad rok',
      twoFour: 'ponad ***REMOVED******REMOVED***count***REMOVED******REMOVED*** lata',
      other: 'ponad ***REMOVED******REMOVED***count***REMOVED******REMOVED*** lat'
    ***REMOVED***,

    almostXYears: ***REMOVED***
      one: 'prawie rok',
      twoFour: 'prawie ***REMOVED******REMOVED***count***REMOVED******REMOVED*** lata',
      other: 'prawie ***REMOVED******REMOVED***count***REMOVED******REMOVED*** lat'
    ***REMOVED***
  ***REMOVED***

  function localize (token, count, options) ***REMOVED***
    options = options || ***REMOVED******REMOVED***

    var scheme = distanceInWordsLocale[token]
    if (!options.addSuffix) ***REMOVED***
      return declension(scheme, count)
    ***REMOVED***

    if (options.comparison > 0) ***REMOVED***
      return 'za ' + declension(scheme, count, 'future')
    ***REMOVED*** else ***REMOVED***
      return declension(scheme, count, 'past') + ' temu'
    ***REMOVED***
  ***REMOVED***

  return ***REMOVED***
    localize: localize
  ***REMOVED***
***REMOVED***

module.exports = buildDistanceInWordsLocale
