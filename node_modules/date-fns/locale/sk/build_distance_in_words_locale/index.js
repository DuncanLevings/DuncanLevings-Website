function declensionGroup (scheme, count) ***REMOVED***
  if (count === 1) ***REMOVED***
    return scheme.one
  ***REMOVED***

  if (count >= 2 && count <= 4) ***REMOVED***
    return scheme.twoFour
  ***REMOVED***

  // if count === null || count === 0 || count >= 5
  return scheme.other
***REMOVED***

function declension (scheme, count, time) ***REMOVED***
  var group = declensionGroup(scheme, count)
  var finalText = group[time] || group
  return finalText.replace('***REMOVED******REMOVED***count***REMOVED******REMOVED***', count)
***REMOVED***

function extractPreposition (token) ***REMOVED***
  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) ***REMOVED***
    return !!token.match(new RegExp('^' + preposition))
  ***REMOVED***)

  return result[0]
***REMOVED***

function prefixPreposition (preposition) ***REMOVED***
  var translation = ''

  if (preposition === 'almost') ***REMOVED***
    translation = 'takmer'
  ***REMOVED***

  if (preposition === 'about') ***REMOVED***
    translation = 'približne'
  ***REMOVED***

  return translation.length > 0 ? translation + ' ' : ''
***REMOVED***

function suffixPreposition (preposition) ***REMOVED***
  var translation = ''

  if (preposition === 'lessThan') ***REMOVED***
    translation = 'menej než'
  ***REMOVED***

  if (preposition === 'over') ***REMOVED***
    translation = 'viac než'
  ***REMOVED***

  return translation.length > 0 ? translation + ' ' : ''
***REMOVED***

function lowercaseFirstLetter (string) ***REMOVED***
  return string.charAt(0).toLowerCase() + string.slice(1)
***REMOVED***

function buildDistanceInWordsLocale () ***REMOVED***
  var distanceInWordsLocale = ***REMOVED***
    xSeconds: ***REMOVED***
      one: ***REMOVED***
        regular: 'sekunda',
        past: 'sekundou',
        future: 'sekundu'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekundy',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekundami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekundy'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekúnd',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekundami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** sekúnd'
      ***REMOVED***
    ***REMOVED***,

    halfAMinute: ***REMOVED***
      other: ***REMOVED***
        regular: 'pol minúty',
        past: 'pol minútou',
        future: 'pol minúty'
      ***REMOVED***
    ***REMOVED***,

    xMinutes: ***REMOVED***
      one: ***REMOVED***
        regular: 'minúta',
        past: 'minútou',
        future: 'minútu'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minúty',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minútami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minúty'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minút',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minútami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** minút'
      ***REMOVED***
    ***REMOVED***,

    xHours: ***REMOVED***
      one: ***REMOVED***
        regular: 'hodina',
        past: 'hodinou',
        future: 'hodinu'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodiny',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodinami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodiny'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodín',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodinami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** hodín'
      ***REMOVED***
    ***REMOVED***,

    xDays: ***REMOVED***
      one: ***REMOVED***
        regular: 'deň',
        past: 'dňom',
        future: 'deň'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dni',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dňami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dni'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dní',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dňami',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** dní'
      ***REMOVED***
    ***REMOVED***,

    xMonths: ***REMOVED***
      one: ***REMOVED***
        regular: 'mesiac',
        past: 'mesiacom',
        future: 'mesiac'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** mesiace',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** mesiacmi',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** mesiace'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** mesiacov',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** mesiacmi',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** mesiacov'
      ***REMOVED***
    ***REMOVED***,

    xYears: ***REMOVED***
      one: ***REMOVED***
        regular: 'rok',
        past: 'rokom',
        future: 'rok'
      ***REMOVED***,
      twoFour: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roky',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** rokmi',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** roky'
      ***REMOVED***,
      other: ***REMOVED***
        regular: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** rokov',
        past: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** rokmi',
        future: '***REMOVED******REMOVED***count***REMOVED******REMOVED*** rokov'
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***

  function localize (token, count, options) ***REMOVED***
    options = options || ***REMOVED******REMOVED***

    var preposition = extractPreposition(token) || ''
    var key = lowercaseFirstLetter(token.substring(preposition.length))
    var scheme = distanceInWordsLocale[key]

    if (!options.addSuffix) ***REMOVED***
      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')
    ***REMOVED***

    if (options.comparison > 0) ***REMOVED***
      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')
    ***REMOVED*** else ***REMOVED***
      return prefixPreposition(preposition) + 'pred ' + suffixPreposition(preposition) + declension(scheme, count, 'past')
    ***REMOVED***
  ***REMOVED***

  return ***REMOVED***
    localize: localize
  ***REMOVED***
***REMOVED***

module.exports = buildDistanceInWordsLocale
