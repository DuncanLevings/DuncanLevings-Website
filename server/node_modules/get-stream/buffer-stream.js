'use strict';
const ***REMOVED***PassThrough***REMOVED*** = require('stream');

module.exports = options => ***REMOVED***
	options = Object.assign(***REMOVED******REMOVED***, options);

	const ***REMOVED***array***REMOVED*** = options;
	let ***REMOVED***encoding***REMOVED*** = options;
	const buffer = encoding === 'buffer';
	let objectMode = false;

	if (array) ***REMOVED***
		objectMode = !(encoding || buffer);
	***REMOVED*** else ***REMOVED***
		encoding = encoding || 'utf8';
	***REMOVED***

	if (buffer) ***REMOVED***
		encoding = null;
	***REMOVED***

	let len = 0;
	const ret = [];
	const stream = new PassThrough(***REMOVED***objectMode***REMOVED***);

	if (encoding) ***REMOVED***
		stream.setEncoding(encoding);
	***REMOVED***

	stream.on('data', chunk => ***REMOVED***
		ret.push(chunk);

		if (objectMode) ***REMOVED***
			len = ret.length;
		***REMOVED*** else ***REMOVED***
			len += chunk.length;
		***REMOVED***
	***REMOVED***);

	stream.getBufferedValue = () => ***REMOVED***
		if (array) ***REMOVED***
			return ret;
		***REMOVED***

		return buffer ? Buffer.concat(ret, len) : ret.join('');
	***REMOVED***;

	stream.getBufferedLength = () => len;

	return stream;
***REMOVED***;
