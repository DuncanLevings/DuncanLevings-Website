'use strict';
const ***REMOVED***PassThrough: PassThroughStream***REMOVED*** = require('stream');

module.exports = options => ***REMOVED***
	options = ***REMOVED***...options***REMOVED***;

	const ***REMOVED***array***REMOVED*** = options;
	let ***REMOVED***encoding***REMOVED*** = options;
	const isBuffer = encoding === 'buffer';
	let objectMode = false;

	if (array) ***REMOVED***
		objectMode = !(encoding || isBuffer);
	***REMOVED*** else ***REMOVED***
		encoding = encoding || 'utf8';
	***REMOVED***

	if (isBuffer) ***REMOVED***
		encoding = null;
	***REMOVED***

	const stream = new PassThroughStream(***REMOVED***objectMode***REMOVED***);

	if (encoding) ***REMOVED***
		stream.setEncoding(encoding);
	***REMOVED***

	let length = 0;
	const chunks = [];

	stream.on('data', chunk => ***REMOVED***
		chunks.push(chunk);

		if (objectMode) ***REMOVED***
			length = chunks.length;
		***REMOVED*** else ***REMOVED***
			length += chunk.length;
		***REMOVED***
	***REMOVED***);

	stream.getBufferedValue = () => ***REMOVED***
		if (array) ***REMOVED***
			return chunks;
		***REMOVED***

		return isBuffer ? Buffer.concat(chunks, length) : chunks.join('');
	***REMOVED***;

	stream.getBufferedLength = () => length;

	return stream;
***REMOVED***;
