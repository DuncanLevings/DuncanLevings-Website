"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
const tls_1 = require("tls");
const deferToConnect = (socket, fn) => ***REMOVED***
    let listeners;
    if (typeof fn === 'function') ***REMOVED***
        const connect = fn;
        listeners = ***REMOVED*** connect ***REMOVED***;
    ***REMOVED***
    else ***REMOVED***
        listeners = fn;
    ***REMOVED***
    const hasConnectListener = typeof listeners.connect === 'function';
    const hasSecureConnectListener = typeof listeners.secureConnect === 'function';
    const hasCloseListener = typeof listeners.close === 'function';
    const onConnect = () => ***REMOVED***
        if (hasConnectListener) ***REMOVED***
            listeners.connect();
        ***REMOVED***
        if (socket instanceof tls_1.TLSSocket && hasSecureConnectListener) ***REMOVED***
            if (socket.authorized) ***REMOVED***
                listeners.secureConnect();
            ***REMOVED***
            else if (!socket.authorizationError) ***REMOVED***
                socket.once('secureConnect', listeners.secureConnect);
            ***REMOVED***
        ***REMOVED***
        if (hasCloseListener) ***REMOVED***
            socket.once('close', listeners.close);
        ***REMOVED***
    ***REMOVED***;
    if (socket.writable && !socket.connecting) ***REMOVED***
        onConnect();
    ***REMOVED***
    else if (socket.connecting) ***REMOVED***
        socket.once('connect', onConnect);
    ***REMOVED***
    else if (socket.destroyed && hasCloseListener) ***REMOVED***
        listeners.close(socket._hadError);
    ***REMOVED***
***REMOVED***;
exports.default = deferToConnect;
// For CommonJS default export support
module.exports = deferToConnect;
module.exports.default = deferToConnect;
